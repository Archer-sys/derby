#!/usr/bin/env node
var args = require('optimist');
var path = require('path');

var projects = require('./lib/projects');
var bundle = require('./lib/bundle');

var argv = args.argv;

args.usage('derby [options]')

  .alias('c', 'create')
  .describe('c', 'Specify a path in which to create a projcet')

  .alias('b', 'bundle')
  .describe('b', 'Bundle derby for client-side only use')

  .alias('e', 'env')
  .default('e', process.env.NODE_ENV)
  .describe('e', 'Specify the environment to use')
 
  .alias('h', 'help')
  .describe('h', 'This help information')

  .describe('coffee', 'Create files using CoffeeScript')
  .describe('no-install', 'Do not run `npm install`');

if (argv.c) {

  var dir = argv.c;
  var app = argv._[0];
  projects.create(argv, dir, app);
}
else if (argv.b || argv.bundle) {

  if (argv.min || argv.minify) {
    argv.m = true;
  }

  var dir = path.dirname(__dirname);
  console.log('Building...');

  var serverInputs = [dir + '/lib/standalone'];
  var serverOutput = dir + '/derby-standalone.js';

  var browserInputs = [dir + '/test/browser'];
  var browserOutput = dir + '/test/browser-standalone.js';

  function die(msg) {
    console.error(msg);
    process.exit(1);
  }

  bundle(argv, serverInputs, serverOutput, function(err) {
    if (err) die(err);
    console.log('Built standalone for server to %s', serverOutput);
  });

  bundle(argv, browserInputs, browserOutput, function(err) {
    if (err) die(err);
    console.log('Built standalone for browser to %s', browserOutput);
  });
}
else {

  console.log(args.help());
  process.exit(1);
}
